{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUserFromId","userId","usersFromServer","find","person","todosWithUser","App","useState","setTodos","setTitle","setUserId","isTitleError","setIsTitleError","userIdError","setUserIdError","userList","highestTodoId","Math","max","action","method","onSubmit","event","preventDefault","length","newTodo","htmlFor","type","placeholder","value","onChange","legalCharacters","croppedInput","target","split","filter","char","test","join","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,OCpDEC,EAAoC,SAAC,GAAD,QAC/CC,KACEJ,EAF6C,EAE7CA,KACAE,EAH6C,EAG7CA,MAH6C,OAM/C,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCNQO,EAAoC,SAAC,GAO3C,IAAD,IANJC,KACEC,EAKE,EALFA,MACAC,EAIE,EAJFA,UACAX,EAGE,EAHFA,GACAK,EAEE,EAFFA,KAGF,OACE,0BAAS,UAASL,EAAIM,UAAS,kBAAaK,EAAY,uBAAyB,IAAjF,UACE,oBAAIL,UAAU,kBAAd,SACGI,IAGFL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCdlBO,EAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC/C,yBAASP,UAAU,WAAnB,SACGO,EAAMC,KAAI,SAACL,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,UCHnB,SAASe,EAAcC,GAC5B,OAAOC,EAAgBC,MAAK,SAACC,GAAD,OAAYA,EAAOnB,KAAOgB,MAAW,KAG5D,IAAMI,ECZE,CACb,CACEpB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXK,OAAQ,IDLyCF,KAAI,SAACL,GAAD,mBAAC,eACrDA,GADoD,IAEvDJ,KAAMU,EAAcN,EAAKO,aAGdK,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOP,EAAP,KAAcU,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcc,EAAd,KACA,EAA4BF,mBAAS,GAArC,mBAAON,EAAP,KAAeS,EAAf,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACMC,EAAWb,EACXc,EAAgBC,KAAKC,IAAL,MAAAD,KAAI,YAAQnB,EAAMC,KAAI,SAAAL,GAAI,OAAKA,EAAKT,QAwD1D,OACE,sBAAKM,UAAU,MAAf,UACE,+CAEA,uBACE4B,OAAO,aACPC,OAAO,OACPC,SAlCN,SAAsBC,GAGpB,GAFAA,EAAMC,iBAEF5B,EAAM6B,OAAS,GAAKvB,EAAS,EAAG,CAClC,IAEMwB,EAAU,CACdxC,GAHgB+B,EAAgB,EAIhCrB,QACAC,WAAW,EACXK,SACAX,KAAMU,EAAcC,IAGtBO,EAAS,GAAD,mBAAKV,GAAL,CAAY2B,KAxCtBf,EAAU,GACVD,EAAS,SA0Cc,IAAjBd,EAAM6B,QACRZ,GAAgB,GAGdX,GAAU,GACZa,GAAe,IASjB,UAKE,sBAAKvB,UAAU,QAAf,UACE,uBAAOmC,QAAQ,QAAf,SACG,YAEH,uBACEzC,GAAG,QACH0C,KAAK,OACL,UAAQ,aACRC,YAAY,QACZC,MAAOlC,EACPmC,SApEV,SAAqBR,GAEnB,IAAMS,EAAkB,0CAClBC,EAAeV,EAAMW,OAAOJ,MAAMK,MAAM,IAAIC,QAAO,SAACC,GAAD,OACvDL,EAAgBM,KAAKD,MACpBE,KAAK,IAER7B,EAASuB,GAELrB,GAAgBqB,EAAaR,OAAS,GACxCZ,GAAgB,MA4DXD,GACC,sBAAMpB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOmC,QAAQ,OAAf,SACG,WAEH,yBACEzC,GAAG,OACH,UAAQ,aACR4C,MAAO5B,EACP6B,SArEV,SAAoBR,GAClBZ,EAAU6B,OAAOjB,EAAMW,OAAOJ,QAE1BhB,GAAe0B,OAAOjB,EAAMW,OAAOJ,OAAS,GAC9Cf,GAAe,IA6DX,UAME,wBAAQe,MAAM,IAAIW,UAAQ,EAA1B,2BACCzB,EAAShB,KAAI,SAACK,GACb,IAAQnB,EAAamB,EAAbnB,GAAIC,EAASkB,EAATlB,KAEZ,OACE,wBAAiB2C,MAAO5C,EAAxB,SACGC,GADUD,SAOlB4B,GACC,sBAAMtB,UAAU,QAAhB,qCAIJ,wBAAQoC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU7B,MAAOA,QEvIvB2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.03a9c90e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({\n  user: {\n    name,\n    email,\n  },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({\n  todo: {\n    title,\n    completed,\n    id,\n    user,\n  },\n}) => {\n  return (\n    <article data-id={id} className={`TodoInfo${completed ? ' TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nexport function getUserFromId(userId: number): User | null {\n  return usersFromServer.find((person) => person.id === userId) || null;\n}\n\nexport const todosWithUser: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserFromId(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n  const userList = usersFromServer;\n  const highestTodoId = Math.max(...todos.map(todo => (todo.id)));\n\n  function resetForm() {\n    setUserId(0);\n    setTitle('');\n  }\n\n  function changeTitle(event: React.ChangeEvent<HTMLInputElement>) {\n    // I opted to do the optional instruction\n    const legalCharacters = /^[\\wа-яА-Яa-zA-Z ]+/;\n    const croppedInput = event.target.value.split('').filter((char) => (\n      legalCharacters.test(char)\n    )).join('');\n\n    setTitle(croppedInput);\n\n    if (isTitleError && croppedInput.length > 0) {\n      setIsTitleError(false);\n    }\n  }\n\n  function changeUser(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserId(Number(event.target.value));\n\n    if (userIdError && Number(event.target.value) > 0) {\n      setUserIdError(false);\n    }\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (title.length > 0 && userId > 0) {\n      const newTodoId = highestTodoId + 1;\n\n      const newTodo = {\n        id: newTodoId,\n        title,\n        completed: false,\n        userId,\n        user: getUserFromId(userId),\n      };\n\n      setTodos([...todos, newTodo]);\n      resetForm();\n    } else {\n      if (title.length === 0) {\n        setIsTitleError(true);\n      }\n\n      if (userId <= 0) {\n        setUserIdError(true);\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={changeTitle}\n          />\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            {'User: '}\n          </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={changeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {userList.map((person) => {\n              const { id, name } = person;\n\n              return (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {userIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}